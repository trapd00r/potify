#!/usr/bin/perl
use strict;
# potify - Inotify-based filesystem event watcher
# Copyright (C) 2010 Magnus Woldrich <trapd00r@trapd00r.se

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
########################################################################
use Linux::Inotify2;
use Data::Dumper;
use Getopt::Long;

our($optColor);
GetOptions(color  => \$optColor);
my $inotify = Linux::Inotify2->new;
my $file = shift or die "Need file to watch";

my $noColor = "\033[0m";
my @colors;
for(my $i=0;$i<256;$i++) {
  push(@colors, "\033[38;5;$i"."m");
}
open(my $origFile, '<', $file) or die $!;
my @originalData = <$origFile>;
close($origFile);

$inotify->watch($file, IN_MODIFY) or die;

my %inotifyEvents = (
  '1'          => 'IN_ACCESS',       # file was accessed
  '2'          => 'IN_MODIFY',       # file was modified
  '4'          => 'IN_ATTRIB',       # metadata has changed
  '8'          => 'IN_CLOSE_WRITE',  # writeable file was closed
  '16'         => 'IN_CLOSE_NOWRITE',# unwriteable file was closed
  '32'         => 'IN_OPEN',         # file was opened
  '64'         => 'IN_MOVED_FROM',   # file was moved from X
  '128'        => 'IN_MOVED_TO',     # file was moved to Y
  '256'        => 'IN_CREATE',       # subfile was created
  '512'        => 'IN_DELETE',       # subfile was deleted
  '1024'       => 'IN_DELETE_SELF',  # self/dir was deleted
  '2048'       => 'IN_MOVE_SELF',    # self was moved
  '8192'       => 'IN_UNMOUNT',      # fs was unmounted
  '16384'      => 'IN_O_OVERFLOW',   # Even queued overflowed
  '32768'      => 'IN_IGNORED',      # file was ignored
  '1073741824' => 'IN_ISDIR',        # event occurred against dir

);
# 2147483648

while(1) {#my @events = $inotify->read) {
  my @events = $inotify->read;
  unless(@events > 0) {
    print "Read error: $!\n";
    last;
  }
  
  foreach my $event(@events) {
    if($inotifyEvents{$event->mask} eq 'IN_MODIFY') {
      open(my $fh, '<', $file) or die "$file changed but can not open it: $!";
      my @content = <$fh>;
      close $fh;
      for(my $i=0; $i < @content; ++$i) {
        if($content[$i] ne $originalData[$i] or !$originalData[$i]) {
          print $content[$i];
          @originalData = @content; # important!! :)
        }
      }
    }
  }
}
